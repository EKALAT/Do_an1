from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes
import qrcode
from io import BytesIO

# Payment Information
PAYMENT_INFO = {
    'bank_name': 'BIDV',
    'account_number': '8851982864',
    'account_holder': 'PHOMMASENG EKALAT',
    'bank_code': 'BIDV',  # M√£ ng√¢n h√†ng
    'amount': None
}

# Payment QR Code Functions
async def thanhtoan(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    keyboard = [
        [
            InlineKeyboardButton("50,000 VND", callback_data="pay_50000"),
            InlineKeyboardButton("100,000 VND", callback_data="pay_100000"),
        ],
        [
            InlineKeyboardButton("200,000 VND", callback_data="pay_200000"),
            InlineKeyboardButton("500,000 VND", callback_data="pay_500000"),
        ],
        [
            InlineKeyboardButton("1,000,000 VND", callback_data="pay_1000000"),
            InlineKeyboardButton("S·ªë ti·ªÅn kh√°c", callback_data="pay_custom"),
        ]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await update.message.reply_text(
        "üí∞ THANH TO√ÅN QR\n\n"
        "Vui l√≤ng ch·ªçn s·ªë ti·ªÅn:",
        reply_markup=reply_markup
    )

async def button_callback(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    query = update.callback_query
    await query.answer()
    
    if query.data.startswith("pay_"):
        amount = query.data.replace("pay_", "")
        if amount == "custom":
            await query.message.reply_text(
                "üí° H∆Ø·ªöNG D·∫™N:\n\n"
                "Vui l√≤ng nh·∫≠p s·ªë ti·ªÅn theo ƒë·ªãnh d·∫°ng:\n"
                "/amount <s·ªë ti·ªÅn>\n\n"
                "V√≠ d·ª•: /amount 150000"
            )
            return
        
        try:
            amount = int(amount)
            qr_image = create_payment_qr(amount)
            
            caption = create_payment_caption(amount)
            
            await query.message.reply_photo(
                photo=qr_image,
                caption=caption,
                parse_mode='HTML'
            )
        except Exception as e:
            await query.message.reply_text("‚ùå ƒê√£ x·∫£y ra l·ªói khi t·∫°o m√£ QR.")
            print(f"Error creating QR: {e}")

async def set_amount(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    if not context.args:
        await update.message.reply_text(
            "‚ö†Ô∏è Vui l√≤ng nh·∫≠p s·ªë ti·ªÅn.\n"
            "V√≠ d·ª•: /amount 150000"
        )
        return
    
    try:
        amount = int(context.args[0])
        if amount < 1000:
            await update.message.reply_text("‚ö†Ô∏è S·ªë ti·ªÅn t·ªëi thi·ªÉu l√† 1,000 VND")
            return
        elif amount > 500000000:
            await update.message.reply_text("‚ö†Ô∏è S·ªë ti·ªÅn t·ªëi ƒëa l√† 500,000,000 VND")
            return
            
        qr_image = create_payment_qr(amount)
        caption = create_payment_caption(amount)
        
        await update.message.reply_photo(
            photo=qr_image,
            caption=caption,
            parse_mode='HTML'
        )
    except ValueError:
        await update.message.reply_text("‚ùå S·ªë ti·ªÅn kh√¥ng h·ª£p l·ªá. Vui l√≤ng nh·∫≠p s·ªë.")

def create_payment_qr(amount):
    # T·∫°o chu·ªói theo chu·∫©n VietQR
    qr_data = (
        f"00020101021238570010A000000727"  # Header v√† ID ·ª©ng d·ª•ng
        f"0111{PAYMENT_INFO['account_number']}"  # S·ªë t√†i kho·∫£n
        f"0208QRIBFTTA"  # M√£ ng√¢n h√†ng BIDV
        f"5303704"  # M√£ ti·ªÅn t·ªá (704 l√† VND)
        f"54{str(amount).zfill(12)}"  # S·ªë ti·ªÅn (12 ch·ªØ s·ªë)
        f"5802VN"  # M√£ qu·ªëc gia
        f"62{len(PAYMENT_INFO['account_holder']):02d}{PAYMENT_INFO['account_holder']}"  # T√™n ng∆∞·ªùi nh·∫≠n
        f"6304"  # Footer
    )
    
    qr = qrcode.QRCode(
        version=1,
        error_correction=qrcode.constants.ERROR_CORRECT_L,
        box_size=10,
        border=4,
    )
    qr.add_data(qr_data)
    qr.make(fit=True)
    
    qr_image = qr.make_image(fill_color="black", back_color="white")
    
    bio = BytesIO()
    bio.name = 'qr.png'
    qr_image.save(bio, 'PNG')
    bio.seek(0)
    
    return bio

def create_payment_caption(amount):
    return (
        "üí≥ <b>TH√îNG TIN CHUY·ªÇN KHO·∫¢N</b>\n\n"
        f"üè¶ Ng√¢n h√†ng: {PAYMENT_INFO['bank_name']}\n"
        f"üì± S·ªë t√†i kho·∫£n: <code>{PAYMENT_INFO['account_number']}</code>\n"
        f"üë§ Ch·ªß t√†i kho·∫£n: <b>{PAYMENT_INFO['account_holder']}</b>\n"
        f"üí∞ S·ªë ti·ªÅn: <b>{amount:,} VND</b>\n\n"
        "üì± <b>H∆Ø·ªöNG D·∫™N:</b>\n"
        "1. M·ªü app ng√¢n h√†ng c·ªßa b·∫°n\n"
        "2. Ch·ªçn t√≠nh nƒÉng qu√©t m√£ QR\n"
        "3. Qu√©t m√£ QR n√†y\n"
        "4. Ki·ªÉm tra th√¥ng tin v√† x√°c nh·∫≠n"
    )